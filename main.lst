                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.7 #12016 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _setupApple
                                     13 	.globl _setupSnake
                                     14 	.globl _moveSnakeDown
                                     15 	.globl _moveSnakeUp
                                     16 	.globl _moveSnakeRight
                                     17 	.globl _moveSnakeLeft
                                     18 	.globl _performDelay
                                     19 	.globl _rand
                                     20 	.globl _initrand
                                     21 	.globl _set_sprite_data
                                     22 	.globl _wait_vbl_done
                                     23 	.globl _joypad
                                     24 	.globl _gameRunning
                                     25 	.globl _lastDir
                                     26 	.globl _apple
                                     27 	.globl _snake
                                     28 	.globl _GameSprites
                                     29 ;--------------------------------------------------------
                                     30 ; special function registers
                                     31 ;--------------------------------------------------------
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DATA
      000000                         36 _GameSprites::
      000000                         37 	.ds 64
      000040                         38 _snake::
      000040                         39 	.ds 25
      000059                         40 _apple::
      000059                         41 	.ds 4
      00005D                         42 _lastDir::
      00005D                         43 	.ds 1
      00005E                         44 _gameRunning::
      00005E                         45 	.ds 1
                                     46 ;--------------------------------------------------------
                                     47 ; absolute external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area _DABS (ABS)
                                     50 ;--------------------------------------------------------
                                     51 ; global & static initialisations
                                     52 ;--------------------------------------------------------
                                     53 	.area _HOME
                                     54 	.area _GSINIT
                                     55 	.area _GSFINAL
                                     56 	.area _GSINIT
                                     57 ;GameSprites.c:26: unsigned char GameSprites[] =
      000000 21r00r00                58 	ld	hl, #_GameSprites
      000003 36 00                   59 	ld	(hl), #0x00
      000005 21r01r00                60 	ld	hl, #(_GameSprites + 0x0001)
      000008 36 00                   61 	ld	(hl), #0x00
      00000A 21r02r00                62 	ld	hl, #(_GameSprites + 0x0002)
      00000D 36 00                   63 	ld	(hl), #0x00
      00000F 21r03r00                64 	ld	hl, #(_GameSprites + 0x0003)
      000012 36 00                   65 	ld	(hl), #0x00
      000014 21r04r00                66 	ld	hl, #(_GameSprites + 0x0004)
      000017 36 00                   67 	ld	(hl), #0x00
      000019 21r05r00                68 	ld	hl, #(_GameSprites + 0x0005)
      00001C 36 00                   69 	ld	(hl), #0x00
      00001E 21r06r00                70 	ld	hl, #(_GameSprites + 0x0006)
      000021 36 00                   71 	ld	(hl), #0x00
      000023 21r07r00                72 	ld	hl, #(_GameSprites + 0x0007)
      000026 36 00                   73 	ld	(hl), #0x00
      000028 21r08r00                74 	ld	hl, #(_GameSprites + 0x0008)
      00002B 36 00                   75 	ld	(hl), #0x00
      00002D 21r09r00                76 	ld	hl, #(_GameSprites + 0x0009)
      000030 36 00                   77 	ld	(hl), #0x00
      000032 21r0Ar00                78 	ld	hl, #(_GameSprites + 0x000a)
      000035 36 00                   79 	ld	(hl), #0x00
      000037 21r0Br00                80 	ld	hl, #(_GameSprites + 0x000b)
      00003A 36 00                   81 	ld	(hl), #0x00
      00003C 21r0Cr00                82 	ld	hl, #(_GameSprites + 0x000c)
      00003F 36 00                   83 	ld	(hl), #0x00
      000041 21r0Dr00                84 	ld	hl, #(_GameSprites + 0x000d)
      000044 36 00                   85 	ld	(hl), #0x00
      000046 21r0Er00                86 	ld	hl, #(_GameSprites + 0x000e)
      000049 36 00                   87 	ld	(hl), #0x00
      00004B 21r0Fr00                88 	ld	hl, #(_GameSprites + 0x000f)
      00004E 36 00                   89 	ld	(hl), #0x00
      000050 21r10r00                90 	ld	hl, #(_GameSprites + 0x0010)
      000053 36 FF                   91 	ld	(hl), #0xff
      000055 21r11r00                92 	ld	hl, #(_GameSprites + 0x0011)
      000058 36 FF                   93 	ld	(hl), #0xff
      00005A 21r12r00                94 	ld	hl, #(_GameSprites + 0x0012)
      00005D 36 81                   95 	ld	(hl), #0x81
      00005F 21r13r00                96 	ld	hl, #(_GameSprites + 0x0013)
      000062 36 FF                   97 	ld	(hl), #0xff
      000064 21r14r00                98 	ld	hl, #(_GameSprites + 0x0014)
      000067 36 BD                   99 	ld	(hl), #0xbd
      000069 21r15r00               100 	ld	hl, #(_GameSprites + 0x0015)
      00006C 36 C3                  101 	ld	(hl), #0xc3
      00006E 21r16r00               102 	ld	hl, #(_GameSprites + 0x0016)
      000071 36 BD                  103 	ld	(hl), #0xbd
      000073 21r17r00               104 	ld	hl, #(_GameSprites + 0x0017)
      000076 36 C3                  105 	ld	(hl), #0xc3
      000078 21r18r00               106 	ld	hl, #(_GameSprites + 0x0018)
      00007B 36 BD                  107 	ld	(hl), #0xbd
      00007D 21r19r00               108 	ld	hl, #(_GameSprites + 0x0019)
      000080 36 C3                  109 	ld	(hl), #0xc3
      000082 21r1Ar00               110 	ld	hl, #(_GameSprites + 0x001a)
      000085 36 BD                  111 	ld	(hl), #0xbd
      000087 21r1Br00               112 	ld	hl, #(_GameSprites + 0x001b)
      00008A 36 C3                  113 	ld	(hl), #0xc3
      00008C 21r1Cr00               114 	ld	hl, #(_GameSprites + 0x001c)
      00008F 36 81                  115 	ld	(hl), #0x81
      000091 21r1Dr00               116 	ld	hl, #(_GameSprites + 0x001d)
      000094 36 FF                  117 	ld	(hl), #0xff
      000096 21r1Er00               118 	ld	hl, #(_GameSprites + 0x001e)
      000099 36 FF                  119 	ld	(hl), #0xff
      00009B 21r1Fr00               120 	ld	hl, #(_GameSprites + 0x001f)
      00009E 36 FF                  121 	ld	(hl), #0xff
      0000A0 21r20r00               122 	ld	hl, #(_GameSprites + 0x0020)
      0000A3 36 00                  123 	ld	(hl), #0x00
      0000A5 21r21r00               124 	ld	hl, #(_GameSprites + 0x0021)
      0000A8 36 00                  125 	ld	(hl), #0x00
      0000AA 21r22r00               126 	ld	hl, #(_GameSprites + 0x0022)
      0000AD 36 3C                  127 	ld	(hl), #0x3c
      0000AF 21r23r00               128 	ld	hl, #(_GameSprites + 0x0023)
      0000B2 36 3C                  129 	ld	(hl), #0x3c
      0000B4 21r24r00               130 	ld	hl, #(_GameSprites + 0x0024)
      0000B7 36 42                  131 	ld	(hl), #0x42
      0000B9 21r25r00               132 	ld	hl, #(_GameSprites + 0x0025)
      0000BC 36 7E                  133 	ld	(hl), #0x7e
      0000BE 21r26r00               134 	ld	hl, #(_GameSprites + 0x0026)
      0000C1 36 BD                  135 	ld	(hl), #0xbd
      0000C3 21r27r00               136 	ld	hl, #(_GameSprites + 0x0027)
      0000C6 36 C3                  137 	ld	(hl), #0xc3
      0000C8 21r28r00               138 	ld	hl, #(_GameSprites + 0x0028)
      0000CB 36 BD                  139 	ld	(hl), #0xbd
      0000CD 21r29r00               140 	ld	hl, #(_GameSprites + 0x0029)
      0000D0 36 C3                  141 	ld	(hl), #0xc3
      0000D2 21r2Ar00               142 	ld	hl, #(_GameSprites + 0x002a)
      0000D5 36 81                  143 	ld	(hl), #0x81
      0000D7 21r2Br00               144 	ld	hl, #(_GameSprites + 0x002b)
      0000DA 36 FF                  145 	ld	(hl), #0xff
      0000DC 21r2Cr00               146 	ld	hl, #(_GameSprites + 0x002c)
      0000DF 36 99                  147 	ld	(hl), #0x99
      0000E1 21r2Dr00               148 	ld	hl, #(_GameSprites + 0x002d)
      0000E4 36 FF                  149 	ld	(hl), #0xff
      0000E6 21r2Er00               150 	ld	hl, #(_GameSprites + 0x002e)
      0000E9 36 66                  151 	ld	(hl), #0x66
      0000EB 21r2Fr00               152 	ld	hl, #(_GameSprites + 0x002f)
      0000EE 36 66                  153 	ld	(hl), #0x66
      0000F0 21r30r00               154 	ld	hl, #(_GameSprites + 0x0030)
      0000F3 36 00                  155 	ld	(hl), #0x00
      0000F5 21r31r00               156 	ld	hl, #(_GameSprites + 0x0031)
      0000F8 36 00                  157 	ld	(hl), #0x00
      0000FA 21r32r00               158 	ld	hl, #(_GameSprites + 0x0032)
      0000FD 36 00                  159 	ld	(hl), #0x00
      0000FF 21r33r00               160 	ld	hl, #(_GameSprites + 0x0033)
      000102 36 00                  161 	ld	(hl), #0x00
      000104 21r34r00               162 	ld	hl, #(_GameSprites + 0x0034)
      000107 36 00                  163 	ld	(hl), #0x00
      000109 21r35r00               164 	ld	hl, #(_GameSprites + 0x0035)
      00010C 36 00                  165 	ld	(hl), #0x00
      00010E 21r36r00               166 	ld	hl, #(_GameSprites + 0x0036)
      000111 36 00                  167 	ld	(hl), #0x00
      000113 21r37r00               168 	ld	hl, #(_GameSprites + 0x0037)
      000116 36 00                  169 	ld	(hl), #0x00
      000118 21r38r00               170 	ld	hl, #(_GameSprites + 0x0038)
      00011B 36 00                  171 	ld	(hl), #0x00
      00011D 21r39r00               172 	ld	hl, #(_GameSprites + 0x0039)
      000120 36 00                  173 	ld	(hl), #0x00
      000122 21r3Ar00               174 	ld	hl, #(_GameSprites + 0x003a)
      000125 36 00                  175 	ld	(hl), #0x00
      000127 21r3Br00               176 	ld	hl, #(_GameSprites + 0x003b)
      00012A 36 00                  177 	ld	(hl), #0x00
      00012C 21r3Cr00               178 	ld	hl, #(_GameSprites + 0x003c)
      00012F 36 00                  179 	ld	(hl), #0x00
      000131 21r3Dr00               180 	ld	hl, #(_GameSprites + 0x003d)
      000134 36 00                  181 	ld	(hl), #0x00
      000136 21r3Er00               182 	ld	hl, #(_GameSprites + 0x003e)
      000139 36 00                  183 	ld	(hl), #0x00
      00013B 21r3Fr00               184 	ld	hl, #(_GameSprites + 0x003f)
      00013E 36 00                  185 	ld	(hl), #0x00
                                    186 ;--------------------------------------------------------
                                    187 ; Home
                                    188 ;--------------------------------------------------------
                                    189 	.area _HOME
                                    190 	.area _HOME
                                    191 ;--------------------------------------------------------
                                    192 ; code
                                    193 ;--------------------------------------------------------
                                    194 	.area _CODE
                                    195 ;main.c:15: void performDelay(UINT8 numloops){
                                    196 ;	---------------------------------
                                    197 ; Function performDelay
                                    198 ; ---------------------------------
      000000                        199 _performDelay::
                                    200 ;main.c:17: for(i = 0; i < numloops; i++){
      000000 0E 00                  201 	ld	c, #0x00
      000002                        202 00103$:
      000002 79                     203 	ld	a, c
      000003 F8 02                  204 	ldhl	sp,	#2
      000005 96                     205 	sub	a, (hl)
      000006 D0                     206 	ret	NC
                                    207 ;main.c:18: wait_vbl_done();
      000007 CDr00r00               208 	call	_wait_vbl_done
                                    209 ;main.c:17: for(i = 0; i < numloops; i++){
      00000A 0C                     210 	inc	c
                                    211 ;main.c:20: }
      00000B 18 F5                  212 	jr	00103$
                                    213 ;main.c:23: void moveSnakeLeft() {
                                    214 ;	---------------------------------
                                    215 ; Function moveSnakeLeft
                                    216 ; ---------------------------------
      00000D                        217 _moveSnakeLeft::
                                    218 ;main.c:24: snake.x -= 8;
      00000D 11r55r00               219 	ld	de, #_snake + 21
      000010 1A                     220 	ld	a, (de)
      000011 C6 F8                  221 	add	a, #0xf8
      000013 12                     222 	ld	(de), a
                                    223 ;main.c:25: move_sprite(1, snake.x, snake.y);
      000014 21r56r00               224 	ld	hl, #_snake + 22
      000017 46                     225 	ld	b, (hl)
      000018 1A                     226 	ld	a, (de)
      000019 4F                     227 	ld	c, a
                                    228 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      00001A 21r04r00               229 	ld	hl, #(_shadow_OAM + 0x0004)
                                    230 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      00001D 78                     231 	ld	a, b
      00001E 22                     232 	ld	(hl+), a
      00001F 71                     233 	ld	(hl), c
                                    234 ;main.c:25: move_sprite(1, snake.x, snake.y);
                                    235 ;main.c:26: }
      000020 C9                     236 	ret
                                    237 ;main.c:27: void moveSnakeRight() {
                                    238 ;	---------------------------------
                                    239 ; Function moveSnakeRight
                                    240 ; ---------------------------------
      000021                        241 _moveSnakeRight::
                                    242 ;main.c:28: snake.x += 8;
      000021 11r55r00               243 	ld	de, #_snake + 21
      000024 1A                     244 	ld	a, (de)
      000025 C6 08                  245 	add	a, #0x08
      000027 12                     246 	ld	(de), a
                                    247 ;main.c:29: move_sprite(1, snake.x, snake.y);   
      000028 21r56r00               248 	ld	hl, #_snake + 22
      00002B 46                     249 	ld	b, (hl)
      00002C 1A                     250 	ld	a, (de)
      00002D 4F                     251 	ld	c, a
                                    252 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      00002E 21r04r00               253 	ld	hl, #(_shadow_OAM + 0x0004)
                                    254 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      000031 78                     255 	ld	a, b
      000032 22                     256 	ld	(hl+), a
      000033 71                     257 	ld	(hl), c
                                    258 ;main.c:29: move_sprite(1, snake.x, snake.y);   
                                    259 ;main.c:30: }
      000034 C9                     260 	ret
                                    261 ;main.c:31: void moveSnakeUp() {
                                    262 ;	---------------------------------
                                    263 ; Function moveSnakeUp
                                    264 ; ---------------------------------
      000035                        265 _moveSnakeUp::
                                    266 ;main.c:32: snake.y -= 8;
      000035 21r56r00               267 	ld	hl, #_snake + 22
      000038 7E                     268 	ld	a, (hl)
      000039 C6 F8                  269 	add	a, #0xf8
      00003B 77                     270 	ld	(hl), a
                                    271 ;main.c:33: move_sprite(1, snake.x, snake.y);
      00003C 46                     272 	ld	b, (hl)
      00003D 21r55r00               273 	ld	hl, #_snake + 21
      000040 4E                     274 	ld	c, (hl)
                                    275 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      000041 21r04r00               276 	ld	hl, #(_shadow_OAM + 0x0004)
                                    277 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      000044 78                     278 	ld	a, b
      000045 22                     279 	ld	(hl+), a
      000046 71                     280 	ld	(hl), c
                                    281 ;main.c:33: move_sprite(1, snake.x, snake.y);
                                    282 ;main.c:34: }
      000047 C9                     283 	ret
                                    284 ;main.c:35: void moveSnakeDown() {
                                    285 ;	---------------------------------
                                    286 ; Function moveSnakeDown
                                    287 ; ---------------------------------
      000048                        288 _moveSnakeDown::
                                    289 ;main.c:36: snake.y += 8;
      000048 21r56r00               290 	ld	hl, #_snake + 22
      00004B 7E                     291 	ld	a, (hl)
      00004C C6 08                  292 	add	a, #0x08
      00004E 77                     293 	ld	(hl), a
                                    294 ;main.c:37: move_sprite(1, snake.x, snake.y);
      00004F 46                     295 	ld	b, (hl)
      000050 21r55r00               296 	ld	hl, #_snake + 21
      000053 4E                     297 	ld	c, (hl)
                                    298 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      000054 21r04r00               299 	ld	hl, #(_shadow_OAM + 0x0004)
                                    300 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      000057 78                     301 	ld	a, b
      000058 22                     302 	ld	(hl+), a
      000059 71                     303 	ld	(hl), c
                                    304 ;main.c:37: move_sprite(1, snake.x, snake.y);
                                    305 ;main.c:38: }
      00005A C9                     306 	ret
                                    307 ;main.c:40: void setupSnake() {
                                    308 ;	---------------------------------
                                    309 ; Function setupSnake
                                    310 ; ---------------------------------
      00005B                        311 _setupSnake::
                                    312 ;main.c:41: snake.x = 8;
      00005B 21r55r00               313 	ld	hl, #(_snake + 0x0015)
      00005E 36 08                  314 	ld	(hl), #0x08
                                    315 ;main.c:42: snake.y = 16;
      000060 01r56r00               316 	ld	bc, #_snake + 22
      000063 3E 10                  317 	ld	a, #0x10
      000065 02                     318 	ld	(bc), a
                                    319 ;main.c:43: snake.height = 8;
      000066 21r58r00               320 	ld	hl, #(_snake + 0x0018)
      000069 36 08                  321 	ld	(hl), #0x08
                                    322 ;main.c:44: snake.width = 8;
      00006B 21r57r00               323 	ld	hl, #(_snake + 0x0017)
      00006E 36 08                  324 	ld	(hl), #0x08
                                    325 ;c:/gbdk/include/gb/gb.h:1004: shadow_OAM[nb].tile=tile;
      000070 21r06r00               326 	ld	hl, #(_shadow_OAM + 0x0006)
      000073 36 01                  327 	ld	(hl), #0x01
                                    328 ;main.c:48: move_sprite(1, snake.x, snake.y);
      000075 0A                     329 	ld	a, (bc)
      000076 47                     330 	ld	b, a
      000077 21r55r00               331 	ld	hl, #(_snake + 0x0015)
      00007A 4E                     332 	ld	c, (hl)
                                    333 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      00007B 21r04r00               334 	ld	hl, #(_shadow_OAM + 0x0004)
                                    335 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      00007E 78                     336 	ld	a, b
      00007F 22                     337 	ld	(hl+), a
      000080 71                     338 	ld	(hl), c
                                    339 ;main.c:48: move_sprite(1, snake.x, snake.y);
                                    340 ;main.c:49: }
      000081 C9                     341 	ret
                                    342 ;main.c:51: void setupApple() {
                                    343 ;	---------------------------------
                                    344 ; Function setupApple
                                    345 ; ---------------------------------
      000082                        346 _setupApple::
                                    347 ;main.c:53: apple.x = 80;
      000082 21r59r00               348 	ld	hl, #_apple
      000085 36 50                  349 	ld	(hl), #0x50
                                    350 ;main.c:54: apple.y = 80;
      000087 01r5Ar00               351 	ld	bc, #_apple + 1
      00008A 3E 50                  352 	ld	a, #0x50
      00008C 02                     353 	ld	(bc), a
                                    354 ;main.c:55: apple.height = 8;
      00008D 21r5Cr00               355 	ld	hl, #(_apple + 0x0003)
      000090 36 08                  356 	ld	(hl), #0x08
                                    357 ;main.c:56: apple.width = 8;
      000092 21r5Br00               358 	ld	hl, #(_apple + 0x0002)
      000095 36 08                  359 	ld	(hl), #0x08
                                    360 ;c:/gbdk/include/gb/gb.h:1004: shadow_OAM[nb].tile=tile;
      000097 21r0Ar00               361 	ld	hl, #(_shadow_OAM + 0x000a)
      00009A 36 02                  362 	ld	(hl), #0x02
                                    363 ;main.c:60: move_sprite(2, apple.x, apple.y);
      00009C 0A                     364 	ld	a, (bc)
      00009D 47                     365 	ld	b, a
      00009E 21r59r00               366 	ld	hl, #_apple
      0000A1 4E                     367 	ld	c, (hl)
                                    368 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      0000A2 21r08r00               369 	ld	hl, #(_shadow_OAM + 0x0008)
                                    370 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      0000A5 78                     371 	ld	a, b
      0000A6 22                     372 	ld	(hl+), a
      0000A7 71                     373 	ld	(hl), c
                                    374 ;main.c:60: move_sprite(2, apple.x, apple.y);
                                    375 ;main.c:61: }
      0000A8 C9                     376 	ret
                                    377 ;main.c:63: void main() {  
                                    378 ;	---------------------------------
                                    379 ; Function main
                                    380 ; ---------------------------------
      0000A9                        381 _main::
      0000A9 E8 F8                  382 	add	sp, #-8
                                    383 ;main.c:64: initrand(DIV_REG);
      0000AB F0r00                  384 	ldh	a, (_DIV_REG+0)
      0000AD 4F                     385 	ld	c, a
      0000AE 06 00                  386 	ld	b, #0x00
      0000B0 C5                     387 	push	bc
      0000B1 CDr00r00               388 	call	_initrand
      0000B4 E8 02                  389 	add	sp, #2
                                    390 ;main.c:66: lastDir = 1;
      0000B6 21r5Dr00               391 	ld	hl, #_lastDir
      0000B9 36 01                  392 	ld	(hl), #0x01
                                    393 ;main.c:68: set_sprite_data(0, 3, GameSprites);
      0000BB 21r00r00               394 	ld	hl, #_GameSprites
      0000BE E5                     395 	push	hl
      0000BF 3E 03                  396 	ld	a, #0x03
      0000C1 F5                     397 	push	af
      0000C2 33                     398 	inc	sp
      0000C3 AF                     399 	xor	a, a
      0000C4 F5                     400 	push	af
      0000C5 33                     401 	inc	sp
      0000C6 CDr00r00               402 	call	_set_sprite_data
      0000C9 E8 04                  403 	add	sp, #4
                                    404 ;c:/gbdk/include/gb/gb.h:1004: shadow_OAM[nb].tile=tile;
      0000CB 21r02r00               405 	ld	hl, #(_shadow_OAM + 0x0002)
      0000CE 36 00                  406 	ld	(hl), #0x00
                                    407 ;main.c:71: setupSnake();
      0000D0 CDr5Br00               408 	call	_setupSnake
                                    409 ;main.c:72: setupApple();
      0000D3 CDr82r00               410 	call	_setupApple
                                    411 ;main.c:75: SHOW_SPRITES;
      0000D6 F0r00                  412 	ldh	a, (_LCDC_REG+0)
      0000D8 F6 02                  413 	or	a, #0x02
      0000DA E0r00                  414 	ldh	(_LCDC_REG+0),a
                                    415 ;main.c:76: DISPLAY_ON;
      0000DC F0r00                  416 	ldh	a, (_LCDC_REG+0)
      0000DE F6 80                  417 	or	a, #0x80
      0000E0 E0r00                  418 	ldh	(_LCDC_REG+0),a
                                    419 ;main.c:78: gameRunning = 1;
      0000E2 21r5Er00               420 	ld	hl, #_gameRunning
      0000E5 36 01                  421 	ld	(hl), #0x01
                                    422 ;main.c:80: while(gameRunning) {
      0000E7                        423 00133$:
      0000E7 FAr5Er00               424 	ld	a, (#_gameRunning)
      0000EA B7                     425 	or	a, a
      0000EB CArE8r02               426 	jp	Z, 00138$
                                    427 ;main.c:82: if(joypad() & J_LEFT){
      0000EE CDr00r00               428 	call	_joypad
      0000F1 CB 4B                  429 	bit	1, e
      0000F3 28 0A                  430 	jr	Z, 00118$
                                    431 ;main.c:83: moveSnakeLeft();
      0000F5 CDr0Dr00               432 	call	_moveSnakeLeft
                                    433 ;main.c:84: lastDir = 0;
      0000F8 21r5Dr00               434 	ld	hl, #_lastDir
      0000FB 36 00                  435 	ld	(hl), #0x00
      0000FD 18 68                  436 	jr	00119$
      0000FF                        437 00118$:
                                    438 ;main.c:85: } else if (joypad() & J_RIGHT) {
      0000FF CDr00r00               439 	call	_joypad
      000102 7B                     440 	ld	a, e
      000103 0F                     441 	rrca
      000104 30 0A                  442 	jr	NC, 00115$
                                    443 ;main.c:86: moveSnakeRight();
      000106 CDr21r00               444 	call	_moveSnakeRight
                                    445 ;main.c:87: lastDir = 1;
      000109 21r5Dr00               446 	ld	hl, #_lastDir
      00010C 36 01                  447 	ld	(hl), #0x01
      00010E 18 57                  448 	jr	00119$
      000110                        449 00115$:
                                    450 ;main.c:88: } else if (joypad() & J_UP) {
      000110 CDr00r00               451 	call	_joypad
      000113 CB 53                  452 	bit	2, e
      000115 28 0A                  453 	jr	Z, 00112$
                                    454 ;main.c:89: moveSnakeUp();
      000117 CDr35r00               455 	call	_moveSnakeUp
                                    456 ;main.c:90: lastDir = 2;
      00011A 21r5Dr00               457 	ld	hl, #_lastDir
      00011D 36 02                  458 	ld	(hl), #0x02
      00011F 18 46                  459 	jr	00119$
      000121                        460 00112$:
                                    461 ;main.c:91: } else if (joypad() & J_DOWN) {
      000121 CDr00r00               462 	call	_joypad
      000124 CB 5B                  463 	bit	3, e
      000126 28 0A                  464 	jr	Z, 00109$
                                    465 ;main.c:92: moveSnakeDown();
      000128 CDr48r00               466 	call	_moveSnakeDown
                                    467 ;main.c:93: lastDir = 3;
      00012B 21r5Dr00               468 	ld	hl, #_lastDir
      00012E 36 03                  469 	ld	(hl), #0x03
      000130 18 35                  470 	jr	00119$
      000132                        471 00109$:
                                    472 ;main.c:94: } else if(!joypad()) {
      000132 CDr00r00               473 	call	_joypad
      000135 7B                     474 	ld	a, e
      000136 B7                     475 	or	a, a
      000137 20 2E                  476 	jr	NZ, 00119$
                                    477 ;main.c:95: switch (lastDir)
      000139 FAr5Dr00               478 	ld	a, (#_lastDir)
      00013C B7                     479 	or	a, a
      00013D 28 16                  480 	jr	Z, 00101$
      00013F FAr5Dr00               481 	ld	a, (#_lastDir)
      000142 3D                     482 	dec	a
      000143 28 15                  483 	jr	Z, 00102$
      000145 FAr5Dr00               484 	ld	a, (#_lastDir)
      000148 D6 02                  485 	sub	a, #0x02
      00014A 28 13                  486 	jr	Z, 00103$
      00014C FAr5Dr00               487 	ld	a, (#_lastDir)
      00014F D6 03                  488 	sub	a, #0x03
      000151 28 11                  489 	jr	Z, 00104$
      000153 18 12                  490 	jr	00119$
                                    491 ;main.c:97: case LEFT:
      000155                        492 00101$:
                                    493 ;main.c:98: moveSnakeLeft();
      000155 CDr0Dr00               494 	call	_moveSnakeLeft
                                    495 ;main.c:99: break;
      000158 18 0D                  496 	jr	00119$
                                    497 ;main.c:100: case RIGHT:
      00015A                        498 00102$:
                                    499 ;main.c:101: moveSnakeRight();
      00015A CDr21r00               500 	call	_moveSnakeRight
                                    501 ;main.c:102: break;
      00015D 18 08                  502 	jr	00119$
                                    503 ;main.c:103: case UP:
      00015F                        504 00103$:
                                    505 ;main.c:104: moveSnakeUp();
      00015F CDr35r00               506 	call	_moveSnakeUp
                                    507 ;main.c:105: break;
      000162 18 03                  508 	jr	00119$
                                    509 ;main.c:106: case DOWN:
      000164                        510 00104$:
                                    511 ;main.c:107: moveSnakeDown();
      000164 CDr48r00               512 	call	_moveSnakeDown
                                    513 ;main.c:110: }
      000167                        514 00119$:
                                    515 ;main.c:113: if((snake.x >= apple.x && snake.x <= apple.x + apple.width) && (snake.y >= apple.y && snake.y <= apple.y + apple.height) || (apple.x >= snake.x && apple.x <= snake.x + snake.width) && (apple.y >= snake.y && apple.y <= snake.y + snake.height)){
      000167 FAr55r00               516 	ld	a, (#(_snake + 0x0015) + 0)
      00016A F8 00                  517 	ldhl	sp,	#0
      00016C 77                     518 	ld	(hl), a
      00016D FAr59r00               519 	ld	a, (#_apple + 0)
      000170 F8 03                  520 	ldhl	sp,	#3
      000172 77                     521 	ld	(hl), a
      000173 F8 03                  522 	ldhl	sp,	#3
      000175 2A                     523 	ld	a, (hl+)
      000176 77                     524 	ld	(hl), a
      000177 AF                     525 	xor	a, a
      000178 23                     526 	inc	hl
      000179 77                     527 	ld	(hl), a
      00017A F8 00                  528 	ldhl	sp,	#0
      00017C 7E                     529 	ld	a, (hl)
      00017D F8 06                  530 	ldhl	sp,	#6
      00017F 77                     531 	ld	(hl), a
      000180 AF                     532 	xor	a, a
      000181 23                     533 	inc	hl
      000182 77                     534 	ld	(hl), a
      000183 F8 00                  535 	ldhl	sp,	#0
      000185 7E                     536 	ld	a, (hl)
      000186 F8 03                  537 	ldhl	sp,	#3
      000188 96                     538 	sub	a, (hl)
      000189 38 59                  539 	jr	C, 00132$
      00018B FAr5Br00               540 	ld	a, (#(_apple + 0x0002) + 0)
      00018E 16 00                  541 	ld	d, #0x00
                                    542 ;c
      000190 5F                     543 	ld	e, a
      000191 23                     544 	inc	hl
      000192 2A                     545 	ld	a, (hl+)
      000193 66                     546 	ld	h, (hl)
      000194 6F                     547 	ld	l, a
      000195 19                     548 	add	hl, de
      000196 4D                     549 	ld	c, l
      000197 44                     550 	ld	b, h
      000198 F8 06                  551 	ldhl	sp,	#6
      00019A 79                     552 	ld	a, c
      00019B 96                     553 	sub	a, (hl)
      00019C 23                     554 	inc	hl
      00019D 78                     555 	ld	a, b
      00019E 9E                     556 	sbc	a, (hl)
      00019F 78                     557 	ld	a, b
      0001A0 57                     558 	ld	d, a
      0001A1 CB 7E                  559 	bit	7, (hl)
      0001A3 28 07                  560 	jr	Z, 00238$
      0001A5 CB 7A                  561 	bit	7, d
      0001A7 20 08                  562 	jr	NZ, 00239$
      0001A9 BF                     563 	cp	a, a
      0001AA 18 05                  564 	jr	00239$
      0001AC                        565 00238$:
      0001AC CB 7A                  566 	bit	7, d
      0001AE 28 01                  567 	jr	Z, 00239$
      0001B0 37                     568 	scf
      0001B1                        569 00239$:
      0001B1 38 31                  570 	jr	C, 00132$
      0001B3 21r56r00               571 	ld	hl, #(_snake + 0x0016)
      0001B6 4E                     572 	ld	c, (hl)
      0001B7 21r5Ar00               573 	ld	hl, #(_apple + 0x0001)
      0001BA 46                     574 	ld	b, (hl)
      0001BB 79                     575 	ld	a, c
      0001BC 90                     576 	sub	a, b
      0001BD 38 25                  577 	jr	C, 00132$
      0001BF 58                     578 	ld	e, b
      0001C0 16 00                  579 	ld	d, #0x00
      0001C2 FAr5Cr00               580 	ld	a, (#_apple + 3)
      0001C5 26 00                  581 	ld	h, #0x00
      0001C7 6F                     582 	ld	l, a
      0001C8 19                     583 	add	hl, de
      0001C9 06 00                  584 	ld	b, #0x00
      0001CB 58                     585 	ld	e, b
      0001CC 54                     586 	ld	d, h
      0001CD 7D                     587 	ld	a, l
      0001CE 91                     588 	sub	a, c
      0001CF 7C                     589 	ld	a, h
      0001D0 98                     590 	sbc	a, b
      0001D1 CB 7B                  591 	bit	7, e
      0001D3 28 07                  592 	jr	Z, 00240$
      0001D5 CB 7A                  593 	bit	7, d
      0001D7 20 08                  594 	jr	NZ, 00241$
      0001D9 BF                     595 	cp	a, a
      0001DA 18 05                  596 	jr	00241$
      0001DC                        597 00240$:
      0001DC CB 7A                  598 	bit	7, d
      0001DE 28 01                  599 	jr	Z, 00241$
      0001E0 37                     600 	scf
      0001E1                        601 00241$:
      0001E1 D2r72r02               602 	jp	NC, 00123$
      0001E4                        603 00132$:
      0001E4 F8 03                  604 	ldhl	sp,	#3
      0001E6 7E                     605 	ld	a, (hl)
      0001E7 F8 00                  606 	ldhl	sp,	#0
      0001E9 96                     607 	sub	a, (hl)
      0001EA DArC8r02               608 	jp	C, 00124$
      0001ED FAr57r00               609 	ld	a, (#(_snake + 0x0017) + 0)
      0001F0 16 00                  610 	ld	d, #0x00
                                    611 ;c
      0001F2 5F                     612 	ld	e, a
      0001F3 F8 06                  613 	ldhl	sp,	#6
      0001F5 2A                     614 	ld	a, (hl+)
      0001F6 66                     615 	ld	h, (hl)
      0001F7 6F                     616 	ld	l, a
      0001F8 19                     617 	add	hl, de
      0001F9 4D                     618 	ld	c, l
      0001FA 44                     619 	ld	b, h
      0001FB F8 04                  620 	ldhl	sp,	#4
      0001FD 79                     621 	ld	a, c
      0001FE 96                     622 	sub	a, (hl)
      0001FF 23                     623 	inc	hl
      000200 78                     624 	ld	a, b
      000201 9E                     625 	sbc	a, (hl)
      000202 78                     626 	ld	a, b
      000203 57                     627 	ld	d, a
      000204 CB 7E                  628 	bit	7, (hl)
      000206 28 07                  629 	jr	Z, 00242$
      000208 CB 7A                  630 	bit	7, d
      00020A 20 08                  631 	jr	NZ, 00243$
      00020C BF                     632 	cp	a, a
      00020D 18 05                  633 	jr	00243$
      00020F                        634 00242$:
      00020F CB 7A                  635 	bit	7, d
      000211 28 01                  636 	jr	Z, 00243$
      000213 37                     637 	scf
      000214                        638 00243$:
      000214 DArC8r02               639 	jp	C, 00124$
      000217 FAr5Ar00               640 	ld	a, (#(_apple + 0x0001) + 0)
      00021A F8 01                  641 	ldhl	sp,	#1
      00021C 77                     642 	ld	(hl), a
      00021D 21r56r00               643 	ld	hl, #(_snake + 0x0016)
      000220 4E                     644 	ld	c, (hl)
      000221 F8 01                  645 	ldhl	sp,	#1
      000223 7E                     646 	ld	a, (hl)
      000224 91                     647 	sub	a, c
      000225 DArC8r02               648 	jp	C, 00124$
      000228 23                     649 	inc	hl
      000229 71                     650 	ld	(hl), c
      00022A AF                     651 	xor	a, a
      00022B 23                     652 	inc	hl
      00022C 77                     653 	ld	(hl), a
      00022D FAr58r00               654 	ld	a, (#(_snake + 0x0018) + 0)
      000230 23                     655 	inc	hl
      000231 77                     656 	ld	(hl), a
      000232 AF                     657 	xor	a, a
      000233 23                     658 	inc	hl
                                    659 ;c
      000234 32                     660 	ld	(hl-), a
      000235 2B                     661 	dec	hl
      000236 2B                     662 	dec	hl
      000237 2A                     663 	ld	a, (hl+)
      000238 5F                     664 	ld	e, a
      000239 2A                     665 	ld	a, (hl+)
      00023A 57                     666 	ld	d, a
      00023B 2A                     667 	ld	a, (hl+)
      00023C 66                     668 	ld	h, (hl)
      00023D 6F                     669 	ld	l, a
      00023E 19                     670 	add	hl, de
      00023F E5                     671 	push	hl
      000240 7D                     672 	ld	a, l
      000241 F8 08                  673 	ldhl	sp,	#8
      000243 77                     674 	ld	(hl), a
      000244 E1                     675 	pop	hl
      000245 7C                     676 	ld	a, h
      000246 F8 07                  677 	ldhl	sp,	#7
      000248 77                     678 	ld	(hl), a
      000249 F8 01                  679 	ldhl	sp,	#1
      00024B 7E                     680 	ld	a, (hl)
      00024C F8 04                  681 	ldhl	sp,	#4
      00024E 77                     682 	ld	(hl), a
      00024F AF                     683 	xor	a, a
      000250 23                     684 	inc	hl
      000251 77                     685 	ld	(hl), a
      000252 F8 06                  686 	ldhl	sp,	#6
      000254 5D                     687 	ld	e, l
      000255 54                     688 	ld	d, h
      000256 F8 04                  689 	ldhl	sp,	#4
      000258 1A                     690 	ld	a, (de)
      000259 96                     691 	sub	a, (hl)
      00025A 23                     692 	inc	hl
      00025B 13                     693 	inc	de
      00025C 1A                     694 	ld	a, (de)
      00025D 9E                     695 	sbc	a, (hl)
      00025E 1A                     696 	ld	a, (de)
      00025F 57                     697 	ld	d, a
      000260 CB 7E                  698 	bit	7, (hl)
      000262 28 07                  699 	jr	Z, 00244$
      000264 CB 7A                  700 	bit	7, d
      000266 20 08                  701 	jr	NZ, 00245$
      000268 BF                     702 	cp	a, a
      000269 18 05                  703 	jr	00245$
      00026B                        704 00244$:
      00026B CB 7A                  705 	bit	7, d
      00026D 28 01                  706 	jr	Z, 00245$
      00026F 37                     707 	scf
      000270                        708 00245$:
      000270 38 56                  709 	jr	C, 00124$
      000272                        710 00123$:
                                    711 ;main.c:115: UINT8 xRand = rand();
      000272 CDr00r00               712 	call	_rand
      000275 43                     713 	ld	b, e
                                    714 ;main.c:117: UINT8 yRand = rand();
      000276 C5                     715 	push	bc
      000277 CDr00r00               716 	call	_rand
      00027A C1                     717 	pop	bc
      00027B F8 06                  718 	ldhl	sp,	#6
      00027D 73                     719 	ld	(hl), e
                                    720 ;main.c:119: apple.x = ((xRand % xMax) + 1) * 8;
      00027E 3E 14                  721 	ld	a, #0x14
      000280 F5                     722 	push	af
      000281 33                     723 	inc	sp
      000282 C5                     724 	push	bc
      000283 33                     725 	inc	sp
      000284 CDr00r00               726 	call	__moduchar
      000287 E8 02                  727 	add	sp, #2
      000289 F8 07                  728 	ldhl	sp,	#7
      00028B 73                     729 	ld	(hl), e
      00028C 34                     730 	inc	(hl)
      00028D 7E                     731 	ld	a, (hl)
      00028E 87                     732 	add	a, a
      00028F 87                     733 	add	a, a
      000290 87                     734 	add	a, a
      000291 EAr59r00               735 	ld	(#_apple),a
                                    736 ;main.c:120: apple.y = ((yRand % yMax) + 2) * 8;
      000294 3E 12                  737 	ld	a, #0x12
      000296 F5                     738 	push	af
      000297 33                     739 	inc	sp
      000298 F8 07                  740 	ldhl	sp,	#7
      00029A 7E                     741 	ld	a, (hl)
      00029B F5                     742 	push	af
      00029C 33                     743 	inc	sp
      00029D CDr00r00               744 	call	__moduchar
      0002A0 E8 02                  745 	add	sp, #2
      0002A2 F8 07                  746 	ldhl	sp,	#7
      0002A4 73                     747 	ld	(hl), e
      0002A5 34                     748 	inc	(hl)
      0002A6 34                     749 	inc	(hl)
      0002A7 7E                     750 	ld	a, (hl)
      0002A8 87                     751 	add	a, a
      0002A9 87                     752 	add	a, a
      0002AA 87                     753 	add	a, a
      0002AB 77                     754 	ld	(hl), a
      0002AC 11r5Ar00               755 	ld	de, #(_apple + 0x0001)
      0002AF 7E                     756 	ld	a, (hl)
      0002B0 12                     757 	ld	(de), a
                                    758 ;main.c:121: move_sprite(2, apple.x, apple.y);
      0002B1 3A                     759 	ld	a, (hl-)
      0002B2 77                     760 	ld	(hl), a
      0002B3 FAr59r00               761 	ld	a, (#_apple + 0)
      0002B6 F8 07                  762 	ldhl	sp,	#7
      0002B8 77                     763 	ld	(hl), a
                                    764 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
                                    765 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      0002B9 11r08r00               766 	ld	de, #(_shadow_OAM + 0x0008)
      0002BC F8 06                  767 	ldhl	sp,	#6
      0002BE 7E                     768 	ld	a, (hl)
      0002BF 12                     769 	ld	(de), a
      0002C0 11r09r00               770 	ld	de, #(_shadow_OAM + 0x0009)
      0002C3 23                     771 	inc	hl
      0002C4 7E                     772 	ld	a, (hl)
      0002C5 12                     773 	ld	(de), a
                                    774 ;main.c:121: move_sprite(2, apple.x, apple.y);
      0002C6 18 15                  775 	jr	00125$
      0002C8                        776 00124$:
                                    777 ;main.c:122: } else if (snake.x > 160 || snake.y > 144) {
      0002C8 3E A0                  778 	ld	a, #0xa0
      0002CA F8 00                  779 	ldhl	sp,	#0
      0002CC 96                     780 	sub	a, (hl)
      0002CD 38 09                  781 	jr	C, 00120$
      0002CF 21r56r00               782 	ld	hl, #(_snake + 0x0016)
      0002D2 4E                     783 	ld	c, (hl)
      0002D3 3E 90                  784 	ld	a, #0x90
      0002D5 91                     785 	sub	a, c
      0002D6 30 05                  786 	jr	NC, 00125$
      0002D8                        787 00120$:
                                    788 ;main.c:123: gameRunning = 0;
      0002D8 21r5Er00               789 	ld	hl, #_gameRunning
      0002DB 36 00                  790 	ld	(hl), #0x00
      0002DD                        791 00125$:
                                    792 ;main.c:126: performDelay(8); 
      0002DD 3E 08                  793 	ld	a, #0x08
      0002DF F5                     794 	push	af
      0002E0 33                     795 	inc	sp
      0002E1 CDr00r00               796 	call	_performDelay
      0002E4 33                     797 	inc	sp
      0002E5 C3rE7r00               798 	jp	00133$
      0002E8                        799 00138$:
                                    800 ;main.c:129: }
      0002E8 E8 08                  801 	add	sp, #8
      0002EA C9                     802 	ret
                                    803 	.area _CODE
                                    804 	.area _CABS (ABS)
