                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.7 #12016 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _moveSnakeDown
                                     13 	.globl _moveSnakeUp
                                     14 	.globl _moveSnakeRight
                                     15 	.globl _moveSnakeLeft
                                     16 	.globl _createSnake
                                     17 	.globl _performDelay
                                     18 	.globl _set_sprite_data
                                     19 	.globl _wait_vbl_done
                                     20 	.globl _joypad
                                     21 	.globl _lastDir
                                     22 	.globl _snake
                                     23 	.globl _GameSprites
                                     24 ;--------------------------------------------------------
                                     25 ; special function registers
                                     26 ;--------------------------------------------------------
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _DATA
      000000                         31 _GameSprites::
      000000                         32 	.ds 64
      000040                         33 _snake::
      000040                         34 	.ds 25
      000059                         35 _lastDir::
      000059                         36 	.ds 1
                                     37 ;--------------------------------------------------------
                                     38 ; absolute external ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area _DABS (ABS)
                                     41 ;--------------------------------------------------------
                                     42 ; global & static initialisations
                                     43 ;--------------------------------------------------------
                                     44 	.area _HOME
                                     45 	.area _GSINIT
                                     46 	.area _GSFINAL
                                     47 	.area _GSINIT
                                     48 ;GameSprites.c:26: unsigned char GameSprites[] =
      000000 21r00r00                49 	ld	hl, #_GameSprites
      000003 36 00                   50 	ld	(hl), #0x00
      000005 21r01r00                51 	ld	hl, #(_GameSprites + 0x0001)
      000008 36 00                   52 	ld	(hl), #0x00
      00000A 21r02r00                53 	ld	hl, #(_GameSprites + 0x0002)
      00000D 36 00                   54 	ld	(hl), #0x00
      00000F 21r03r00                55 	ld	hl, #(_GameSprites + 0x0003)
      000012 36 00                   56 	ld	(hl), #0x00
      000014 21r04r00                57 	ld	hl, #(_GameSprites + 0x0004)
      000017 36 00                   58 	ld	(hl), #0x00
      000019 21r05r00                59 	ld	hl, #(_GameSprites + 0x0005)
      00001C 36 00                   60 	ld	(hl), #0x00
      00001E 21r06r00                61 	ld	hl, #(_GameSprites + 0x0006)
      000021 36 00                   62 	ld	(hl), #0x00
      000023 21r07r00                63 	ld	hl, #(_GameSprites + 0x0007)
      000026 36 00                   64 	ld	(hl), #0x00
      000028 21r08r00                65 	ld	hl, #(_GameSprites + 0x0008)
      00002B 36 00                   66 	ld	(hl), #0x00
      00002D 21r09r00                67 	ld	hl, #(_GameSprites + 0x0009)
      000030 36 00                   68 	ld	(hl), #0x00
      000032 21r0Ar00                69 	ld	hl, #(_GameSprites + 0x000a)
      000035 36 00                   70 	ld	(hl), #0x00
      000037 21r0Br00                71 	ld	hl, #(_GameSprites + 0x000b)
      00003A 36 00                   72 	ld	(hl), #0x00
      00003C 21r0Cr00                73 	ld	hl, #(_GameSprites + 0x000c)
      00003F 36 00                   74 	ld	(hl), #0x00
      000041 21r0Dr00                75 	ld	hl, #(_GameSprites + 0x000d)
      000044 36 00                   76 	ld	(hl), #0x00
      000046 21r0Er00                77 	ld	hl, #(_GameSprites + 0x000e)
      000049 36 00                   78 	ld	(hl), #0x00
      00004B 21r0Fr00                79 	ld	hl, #(_GameSprites + 0x000f)
      00004E 36 00                   80 	ld	(hl), #0x00
      000050 21r10r00                81 	ld	hl, #(_GameSprites + 0x0010)
      000053 36 FF                   82 	ld	(hl), #0xff
      000055 21r11r00                83 	ld	hl, #(_GameSprites + 0x0011)
      000058 36 FF                   84 	ld	(hl), #0xff
      00005A 21r12r00                85 	ld	hl, #(_GameSprites + 0x0012)
      00005D 36 81                   86 	ld	(hl), #0x81
      00005F 21r13r00                87 	ld	hl, #(_GameSprites + 0x0013)
      000062 36 FF                   88 	ld	(hl), #0xff
      000064 21r14r00                89 	ld	hl, #(_GameSprites + 0x0014)
      000067 36 BD                   90 	ld	(hl), #0xbd
      000069 21r15r00                91 	ld	hl, #(_GameSprites + 0x0015)
      00006C 36 C3                   92 	ld	(hl), #0xc3
      00006E 21r16r00                93 	ld	hl, #(_GameSprites + 0x0016)
      000071 36 BD                   94 	ld	(hl), #0xbd
      000073 21r17r00                95 	ld	hl, #(_GameSprites + 0x0017)
      000076 36 C3                   96 	ld	(hl), #0xc3
      000078 21r18r00                97 	ld	hl, #(_GameSprites + 0x0018)
      00007B 36 BD                   98 	ld	(hl), #0xbd
      00007D 21r19r00                99 	ld	hl, #(_GameSprites + 0x0019)
      000080 36 C3                  100 	ld	(hl), #0xc3
      000082 21r1Ar00               101 	ld	hl, #(_GameSprites + 0x001a)
      000085 36 BD                  102 	ld	(hl), #0xbd
      000087 21r1Br00               103 	ld	hl, #(_GameSprites + 0x001b)
      00008A 36 C3                  104 	ld	(hl), #0xc3
      00008C 21r1Cr00               105 	ld	hl, #(_GameSprites + 0x001c)
      00008F 36 81                  106 	ld	(hl), #0x81
      000091 21r1Dr00               107 	ld	hl, #(_GameSprites + 0x001d)
      000094 36 FF                  108 	ld	(hl), #0xff
      000096 21r1Er00               109 	ld	hl, #(_GameSprites + 0x001e)
      000099 36 FF                  110 	ld	(hl), #0xff
      00009B 21r1Fr00               111 	ld	hl, #(_GameSprites + 0x001f)
      00009E 36 FF                  112 	ld	(hl), #0xff
      0000A0 21r20r00               113 	ld	hl, #(_GameSprites + 0x0020)
      0000A3 36 00                  114 	ld	(hl), #0x00
      0000A5 21r21r00               115 	ld	hl, #(_GameSprites + 0x0021)
      0000A8 36 00                  116 	ld	(hl), #0x00
      0000AA 21r22r00               117 	ld	hl, #(_GameSprites + 0x0022)
      0000AD 36 3C                  118 	ld	(hl), #0x3c
      0000AF 21r23r00               119 	ld	hl, #(_GameSprites + 0x0023)
      0000B2 36 3C                  120 	ld	(hl), #0x3c
      0000B4 21r24r00               121 	ld	hl, #(_GameSprites + 0x0024)
      0000B7 36 42                  122 	ld	(hl), #0x42
      0000B9 21r25r00               123 	ld	hl, #(_GameSprites + 0x0025)
      0000BC 36 7E                  124 	ld	(hl), #0x7e
      0000BE 21r26r00               125 	ld	hl, #(_GameSprites + 0x0026)
      0000C1 36 BD                  126 	ld	(hl), #0xbd
      0000C3 21r27r00               127 	ld	hl, #(_GameSprites + 0x0027)
      0000C6 36 C3                  128 	ld	(hl), #0xc3
      0000C8 21r28r00               129 	ld	hl, #(_GameSprites + 0x0028)
      0000CB 36 BD                  130 	ld	(hl), #0xbd
      0000CD 21r29r00               131 	ld	hl, #(_GameSprites + 0x0029)
      0000D0 36 C3                  132 	ld	(hl), #0xc3
      0000D2 21r2Ar00               133 	ld	hl, #(_GameSprites + 0x002a)
      0000D5 36 81                  134 	ld	(hl), #0x81
      0000D7 21r2Br00               135 	ld	hl, #(_GameSprites + 0x002b)
      0000DA 36 FF                  136 	ld	(hl), #0xff
      0000DC 21r2Cr00               137 	ld	hl, #(_GameSprites + 0x002c)
      0000DF 36 99                  138 	ld	(hl), #0x99
      0000E1 21r2Dr00               139 	ld	hl, #(_GameSprites + 0x002d)
      0000E4 36 FF                  140 	ld	(hl), #0xff
      0000E6 21r2Er00               141 	ld	hl, #(_GameSprites + 0x002e)
      0000E9 36 66                  142 	ld	(hl), #0x66
      0000EB 21r2Fr00               143 	ld	hl, #(_GameSprites + 0x002f)
      0000EE 36 66                  144 	ld	(hl), #0x66
      0000F0 21r30r00               145 	ld	hl, #(_GameSprites + 0x0030)
      0000F3 36 00                  146 	ld	(hl), #0x00
      0000F5 21r31r00               147 	ld	hl, #(_GameSprites + 0x0031)
      0000F8 36 00                  148 	ld	(hl), #0x00
      0000FA 21r32r00               149 	ld	hl, #(_GameSprites + 0x0032)
      0000FD 36 00                  150 	ld	(hl), #0x00
      0000FF 21r33r00               151 	ld	hl, #(_GameSprites + 0x0033)
      000102 36 00                  152 	ld	(hl), #0x00
      000104 21r34r00               153 	ld	hl, #(_GameSprites + 0x0034)
      000107 36 00                  154 	ld	(hl), #0x00
      000109 21r35r00               155 	ld	hl, #(_GameSprites + 0x0035)
      00010C 36 00                  156 	ld	(hl), #0x00
      00010E 21r36r00               157 	ld	hl, #(_GameSprites + 0x0036)
      000111 36 00                  158 	ld	(hl), #0x00
      000113 21r37r00               159 	ld	hl, #(_GameSprites + 0x0037)
      000116 36 00                  160 	ld	(hl), #0x00
      000118 21r38r00               161 	ld	hl, #(_GameSprites + 0x0038)
      00011B 36 00                  162 	ld	(hl), #0x00
      00011D 21r39r00               163 	ld	hl, #(_GameSprites + 0x0039)
      000120 36 00                  164 	ld	(hl), #0x00
      000122 21r3Ar00               165 	ld	hl, #(_GameSprites + 0x003a)
      000125 36 00                  166 	ld	(hl), #0x00
      000127 21r3Br00               167 	ld	hl, #(_GameSprites + 0x003b)
      00012A 36 00                  168 	ld	(hl), #0x00
      00012C 21r3Cr00               169 	ld	hl, #(_GameSprites + 0x003c)
      00012F 36 00                  170 	ld	(hl), #0x00
      000131 21r3Dr00               171 	ld	hl, #(_GameSprites + 0x003d)
      000134 36 00                  172 	ld	(hl), #0x00
      000136 21r3Er00               173 	ld	hl, #(_GameSprites + 0x003e)
      000139 36 00                  174 	ld	(hl), #0x00
      00013B 21r3Fr00               175 	ld	hl, #(_GameSprites + 0x003f)
      00013E 36 00                  176 	ld	(hl), #0x00
                                    177 ;--------------------------------------------------------
                                    178 ; Home
                                    179 ;--------------------------------------------------------
                                    180 	.area _HOME
                                    181 	.area _HOME
                                    182 ;--------------------------------------------------------
                                    183 ; code
                                    184 ;--------------------------------------------------------
                                    185 	.area _CODE
                                    186 ;main.c:10: void performDelay(UINT8 numloops){
                                    187 ;	---------------------------------
                                    188 ; Function performDelay
                                    189 ; ---------------------------------
      000000                        190 _performDelay::
                                    191 ;main.c:12: for(i = 0; i < numloops; i++){
      000000 0E 00                  192 	ld	c, #0x00
      000002                        193 00103$:
      000002 79                     194 	ld	a, c
      000003 F8 02                  195 	ldhl	sp,	#2
      000005 96                     196 	sub	a, (hl)
      000006 D0                     197 	ret	NC
                                    198 ;main.c:13: wait_vbl_done();
      000007 CDr00r00               199 	call	_wait_vbl_done
                                    200 ;main.c:12: for(i = 0; i < numloops; i++){
      00000A 0C                     201 	inc	c
                                    202 ;main.c:15: }
      00000B 18 F5                  203 	jr	00103$
                                    204 ;main.c:17: void createSnake() {
                                    205 ;	---------------------------------
                                    206 ; Function createSnake
                                    207 ; ---------------------------------
      00000D                        208 _createSnake::
                                    209 ;main.c:18: snake.x = 8;
      00000D 21r55r00               210 	ld	hl, #(_snake + 0x0015)
      000010 36 08                  211 	ld	(hl), #0x08
                                    212 ;main.c:19: snake.y = 16;
      000012 01r56r00               213 	ld	bc, #_snake + 22
      000015 3E 10                  214 	ld	a, #0x10
      000017 02                     215 	ld	(bc), a
                                    216 ;main.c:20: snake.height = 8;
      000018 21r58r00               217 	ld	hl, #(_snake + 0x0018)
      00001B 36 08                  218 	ld	(hl), #0x08
                                    219 ;main.c:21: snake.width = 8;
      00001D 21r57r00               220 	ld	hl, #(_snake + 0x0017)
      000020 36 08                  221 	ld	(hl), #0x08
                                    222 ;c:/gbdk/include/gb/gb.h:1004: shadow_OAM[nb].tile=tile;
      000022 21r06r00               223 	ld	hl, #(_shadow_OAM + 0x0006)
      000025 36 01                  224 	ld	(hl), #0x01
                                    225 ;main.c:25: move_sprite(1, snake.x, snake.y);
      000027 0A                     226 	ld	a, (bc)
      000028 47                     227 	ld	b, a
      000029 21r55r00               228 	ld	hl, #(_snake + 0x0015)
      00002C 4E                     229 	ld	c, (hl)
                                    230 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      00002D 21r04r00               231 	ld	hl, #(_shadow_OAM + 0x0004)
                                    232 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      000030 78                     233 	ld	a, b
      000031 22                     234 	ld	(hl+), a
      000032 71                     235 	ld	(hl), c
                                    236 ;main.c:25: move_sprite(1, snake.x, snake.y);
                                    237 ;main.c:26: }
      000033 C9                     238 	ret
                                    239 ;main.c:28: void moveSnakeLeft() {
                                    240 ;	---------------------------------
                                    241 ; Function moveSnakeLeft
                                    242 ; ---------------------------------
      000034                        243 _moveSnakeLeft::
                                    244 ;main.c:29: snake.x -= 8;
      000034 11r55r00               245 	ld	de, #_snake + 21
      000037 1A                     246 	ld	a, (de)
      000038 C6 F8                  247 	add	a, #0xf8
      00003A 12                     248 	ld	(de), a
                                    249 ;main.c:30: move_sprite(1, snake.x, snake.y);
      00003B 21r56r00               250 	ld	hl, #_snake + 22
      00003E 46                     251 	ld	b, (hl)
      00003F 1A                     252 	ld	a, (de)
      000040 4F                     253 	ld	c, a
                                    254 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      000041 21r04r00               255 	ld	hl, #(_shadow_OAM + 0x0004)
                                    256 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      000044 78                     257 	ld	a, b
      000045 22                     258 	ld	(hl+), a
      000046 71                     259 	ld	(hl), c
                                    260 ;main.c:30: move_sprite(1, snake.x, snake.y);
                                    261 ;main.c:31: }
      000047 C9                     262 	ret
                                    263 ;main.c:32: void moveSnakeRight() {
                                    264 ;	---------------------------------
                                    265 ; Function moveSnakeRight
                                    266 ; ---------------------------------
      000048                        267 _moveSnakeRight::
                                    268 ;main.c:33: snake.x += 8;
      000048 11r55r00               269 	ld	de, #_snake + 21
      00004B 1A                     270 	ld	a, (de)
      00004C C6 08                  271 	add	a, #0x08
      00004E 12                     272 	ld	(de), a
                                    273 ;main.c:34: move_sprite(1, snake.x, snake.y);   
      00004F 21r56r00               274 	ld	hl, #_snake + 22
      000052 46                     275 	ld	b, (hl)
      000053 1A                     276 	ld	a, (de)
      000054 4F                     277 	ld	c, a
                                    278 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      000055 21r04r00               279 	ld	hl, #(_shadow_OAM + 0x0004)
                                    280 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      000058 78                     281 	ld	a, b
      000059 22                     282 	ld	(hl+), a
      00005A 71                     283 	ld	(hl), c
                                    284 ;main.c:34: move_sprite(1, snake.x, snake.y);   
                                    285 ;main.c:35: }
      00005B C9                     286 	ret
                                    287 ;main.c:36: void moveSnakeUp() {
                                    288 ;	---------------------------------
                                    289 ; Function moveSnakeUp
                                    290 ; ---------------------------------
      00005C                        291 _moveSnakeUp::
                                    292 ;main.c:37: snake.y -= 8;
      00005C 21r56r00               293 	ld	hl, #_snake + 22
      00005F 7E                     294 	ld	a, (hl)
      000060 C6 F8                  295 	add	a, #0xf8
      000062 77                     296 	ld	(hl), a
                                    297 ;main.c:38: move_sprite(1, snake.x, snake.y);
      000063 46                     298 	ld	b, (hl)
      000064 21r55r00               299 	ld	hl, #_snake + 21
      000067 4E                     300 	ld	c, (hl)
                                    301 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      000068 21r04r00               302 	ld	hl, #(_shadow_OAM + 0x0004)
                                    303 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      00006B 78                     304 	ld	a, b
      00006C 22                     305 	ld	(hl+), a
      00006D 71                     306 	ld	(hl), c
                                    307 ;main.c:38: move_sprite(1, snake.x, snake.y);
                                    308 ;main.c:39: }
      00006E C9                     309 	ret
                                    310 ;main.c:40: void moveSnakeDown() {
                                    311 ;	---------------------------------
                                    312 ; Function moveSnakeDown
                                    313 ; ---------------------------------
      00006F                        314 _moveSnakeDown::
                                    315 ;main.c:41: snake.y += 8;
      00006F 21r56r00               316 	ld	hl, #_snake + 22
      000072 7E                     317 	ld	a, (hl)
      000073 C6 08                  318 	add	a, #0x08
      000075 77                     319 	ld	(hl), a
                                    320 ;main.c:42: move_sprite(1, snake.x, snake.y);
      000076 46                     321 	ld	b, (hl)
      000077 21r55r00               322 	ld	hl, #_snake + 21
      00007A 4E                     323 	ld	c, (hl)
                                    324 ;c:/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      00007B 21r04r00               325 	ld	hl, #(_shadow_OAM + 0x0004)
                                    326 ;c:/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      00007E 78                     327 	ld	a, b
      00007F 22                     328 	ld	(hl+), a
      000080 71                     329 	ld	(hl), c
                                    330 ;main.c:42: move_sprite(1, snake.x, snake.y);
                                    331 ;main.c:43: }
      000081 C9                     332 	ret
                                    333 ;main.c:45: void main() {  
                                    334 ;	---------------------------------
                                    335 ; Function main
                                    336 ; ---------------------------------
      000082                        337 _main::
                                    338 ;main.c:47: lastDir = 1;
      000082 21r59r00               339 	ld	hl, #_lastDir
      000085 36 01                  340 	ld	(hl), #0x01
                                    341 ;main.c:49: set_sprite_data(0, 2, GameSprites);
      000087 21r00r00               342 	ld	hl, #_GameSprites
      00008A E5                     343 	push	hl
      00008B 3E 02                  344 	ld	a, #0x02
      00008D F5                     345 	push	af
      00008E 33                     346 	inc	sp
      00008F AF                     347 	xor	a, a
      000090 F5                     348 	push	af
      000091 33                     349 	inc	sp
      000092 CDr00r00               350 	call	_set_sprite_data
      000095 E8 04                  351 	add	sp, #4
                                    352 ;c:/gbdk/include/gb/gb.h:1004: shadow_OAM[nb].tile=tile;
      000097 21r02r00               353 	ld	hl, #(_shadow_OAM + 0x0002)
      00009A 36 00                  354 	ld	(hl), #0x00
                                    355 ;main.c:52: createSnake();
      00009C CDr0Dr00               356 	call	_createSnake
                                    357 ;main.c:55: SHOW_SPRITES;
      00009F F0r00                  358 	ldh	a, (_LCDC_REG+0)
      0000A1 F6 02                  359 	or	a, #0x02
      0000A3 E0r00                  360 	ldh	(_LCDC_REG+0),a
                                    361 ;main.c:56: DISPLAY_ON;
      0000A5 F0r00                  362 	ldh	a, (_LCDC_REG+0)
      0000A7 F6 80                  363 	or	a, #0x80
      0000A9 E0r00                  364 	ldh	(_LCDC_REG+0),a
                                    365 ;main.c:57: while(1) {
      0000AB                        366 00121$:
                                    367 ;main.c:59: if(joypad() & J_LEFT){
      0000AB CDr00r00               368 	call	_joypad
      0000AE CB 4B                  369 	bit	1, e
      0000B0 28 0A                  370 	jr	Z, 00118$
                                    371 ;main.c:60: moveSnakeLeft();
      0000B2 CDr34r00               372 	call	_moveSnakeLeft
                                    373 ;main.c:61: lastDir = 0;
      0000B5 21r59r00               374 	ld	hl, #_lastDir
      0000B8 36 00                  375 	ld	(hl), #0x00
      0000BA 18 68                  376 	jr	00119$
      0000BC                        377 00118$:
                                    378 ;main.c:62: } else if (joypad() & J_RIGHT) {
      0000BC CDr00r00               379 	call	_joypad
      0000BF 7B                     380 	ld	a, e
      0000C0 0F                     381 	rrca
      0000C1 30 0A                  382 	jr	NC, 00115$
                                    383 ;main.c:63: moveSnakeRight();
      0000C3 CDr48r00               384 	call	_moveSnakeRight
                                    385 ;main.c:64: lastDir = 1;
      0000C6 21r59r00               386 	ld	hl, #_lastDir
      0000C9 36 01                  387 	ld	(hl), #0x01
      0000CB 18 57                  388 	jr	00119$
      0000CD                        389 00115$:
                                    390 ;main.c:65: } else if (joypad() & J_UP) {
      0000CD CDr00r00               391 	call	_joypad
      0000D0 CB 53                  392 	bit	2, e
      0000D2 28 0A                  393 	jr	Z, 00112$
                                    394 ;main.c:66: moveSnakeUp();
      0000D4 CDr5Cr00               395 	call	_moveSnakeUp
                                    396 ;main.c:67: lastDir = 2;
      0000D7 21r59r00               397 	ld	hl, #_lastDir
      0000DA 36 02                  398 	ld	(hl), #0x02
      0000DC 18 46                  399 	jr	00119$
      0000DE                        400 00112$:
                                    401 ;main.c:68: } else if (joypad() & J_DOWN) {
      0000DE CDr00r00               402 	call	_joypad
      0000E1 CB 5B                  403 	bit	3, e
      0000E3 28 0A                  404 	jr	Z, 00109$
                                    405 ;main.c:69: moveSnakeDown();
      0000E5 CDr6Fr00               406 	call	_moveSnakeDown
                                    407 ;main.c:70: lastDir = 3;
      0000E8 21r59r00               408 	ld	hl, #_lastDir
      0000EB 36 03                  409 	ld	(hl), #0x03
      0000ED 18 35                  410 	jr	00119$
      0000EF                        411 00109$:
                                    412 ;main.c:71: } else if(!joypad()) {
      0000EF CDr00r00               413 	call	_joypad
      0000F2 7B                     414 	ld	a, e
      0000F3 B7                     415 	or	a, a
      0000F4 20 2E                  416 	jr	NZ, 00119$
                                    417 ;main.c:72: switch (lastDir)
      0000F6 FAr59r00               418 	ld	a, (#_lastDir)
      0000F9 B7                     419 	or	a, a
      0000FA 28 16                  420 	jr	Z, 00101$
      0000FC FAr59r00               421 	ld	a, (#_lastDir)
      0000FF 3D                     422 	dec	a
      000100 28 15                  423 	jr	Z, 00102$
      000102 FAr59r00               424 	ld	a, (#_lastDir)
      000105 D6 02                  425 	sub	a, #0x02
      000107 28 13                  426 	jr	Z, 00103$
      000109 FAr59r00               427 	ld	a, (#_lastDir)
      00010C D6 03                  428 	sub	a, #0x03
      00010E 28 11                  429 	jr	Z, 00104$
      000110 18 12                  430 	jr	00119$
                                    431 ;main.c:74: case LEFT:
      000112                        432 00101$:
                                    433 ;main.c:75: moveSnakeLeft();
      000112 CDr34r00               434 	call	_moveSnakeLeft
                                    435 ;main.c:76: break;
      000115 18 0D                  436 	jr	00119$
                                    437 ;main.c:77: case RIGHT:
      000117                        438 00102$:
                                    439 ;main.c:78: moveSnakeRight();
      000117 CDr48r00               440 	call	_moveSnakeRight
                                    441 ;main.c:79: break;
      00011A 18 08                  442 	jr	00119$
                                    443 ;main.c:80: case UP:
      00011C                        444 00103$:
                                    445 ;main.c:81: moveSnakeUp();
      00011C CDr5Cr00               446 	call	_moveSnakeUp
                                    447 ;main.c:82: break;
      00011F 18 03                  448 	jr	00119$
                                    449 ;main.c:83: case DOWN:
      000121                        450 00104$:
                                    451 ;main.c:84: moveSnakeDown();
      000121 CDr6Fr00               452 	call	_moveSnakeDown
                                    453 ;main.c:87: }
      000124                        454 00119$:
                                    455 ;main.c:90: performDelay(7); 
      000124 3E 07                  456 	ld	a, #0x07
      000126 F5                     457 	push	af
      000127 33                     458 	inc	sp
      000128 CDr00r00               459 	call	_performDelay
      00012B 33                     460 	inc	sp
                                    461 ;main.c:93: }
      00012C C3rABr00               462 	jp	00121$
                                    463 	.area _CODE
                                    464 	.area _CABS (ABS)
